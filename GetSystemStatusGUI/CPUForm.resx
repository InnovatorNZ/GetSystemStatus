<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACF3PgAhd35AJH+/wCO+/8AFQAAAIfh/ACG3vgAmf//AIzo
        /wCQ//8ACe7/AA/e/wAA//8AGMr9ABbO/wBoHA4AFd3/AAb//wAkvu8AIsDyAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/D1wB/w9cOg9fxf4PU7EWF3PoAgtPnAILS
        5hqF2fCGhdPpLYbY7wAguuoAIrblMSG87I0ksd0dI7PgABTS/wAhuehJH73vgSqr1A4qq9MAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiNz1AIjc9iWG3/zuhNLqmaL/
        /wCDzeMAgsPXS4Xd+P6H3PhrhuD8ABzG/QAdxftrHsT4/ymt2E0lteMAAP//ACO46J4dxv3uIMP2JSDD
        9gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPpNiAE1zUgB+2OYAi+L/JYfg
        /uyEzOOhif//AHrG0gCCvNBQhtz4/Yjf/mt72eoAIrvbABvJ/2sexPr9LKrVUCupwQAA//8AJLbnoRzH
        /+wdyf8lI7raAP8AAAAxh1UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEiSYwBuFBoAM8WBABSC
        HQRyyco1gd307X3M3KMwlEcKALIwBne9xFeB2vD9ftnscw6PIAc8figPHsDkdx7C7/0spbpeO4AxED57
        PRQls9eoHcXy7SazwTdBbxsHI6ZiAHAiMgBAhlcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW2pQADDG
        fwA5snY7Nbt5sjm6fdZDxJP8PcGK5zK+esEyvnrAOb6B1UTElP88wIfeMLp2wyKnYtEeqW/mHa9+/x+n
        aOEgpF/TIKRf1B+qcu8ern38Iadm2yKlYbgmn2A7HqpiAGZwawAAAAAAAAAAAAAAAACCzeMAgLfIAIbX
        8wB91+kAE4UcBDa7erI0v3z/Nb99/0bChf9Mw4n/TMOK/0zDiv9Mw4r/TMOI/0zDiv9KwIf/PK91/zqt
        cv87rXH/Oq1y/zqtc/86rXP/Oq1y/zKrbf8gqmT/Hqpj/yKlYbU/chIGIb3fACDD9gAoq9QAHcD0AIPP
        5QCAt8gQh9fzJorg/yVxys40Obx91TW/ff9/zKf/xtnQ/83a1P/M2tT/zNrU/8za1P/M2tT/zdrU/8TR
        y/+uuLP/rbax/622sf+ttrH/rbax/622sf+ttrH/prau/2iwjP8gqmT/Iadm2iW0wjcdyf8lIMP2JSes
        1g0juuwAWwAAAYXQ54yH3vzvh+D+7IHd9O1DxJP8RsKG/8bZ0P/g3t//3t3e/97d3v/e3d7/3t3e/97d
        3v/f3t7/1NTU/7m4uf+4t7f/uLe3/7i3t/+4t7f/uLe3/7i3t/+5t7j/prau/zKrbf8er338HcXy7RzH
        /+wdxv3uILztggD//wCP//8Ahc3jUIXT7aGF1O+hfc/fqD2+iO9Mw4n/zdrU/97d3v/d3d3/3d3d/93d
        3f/d3d3/3d3d/97e3v/T09P/uLi4/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7i3t/+ttrH/Oq1y/x+q
        cu8ls9eoJLbnoSO46Z4iuOdKBvn/AIBvbACH9v8Ar///AEP//wA8hU4UNLZ11E3Eiv/N2tT/3t3e/93d
        3f/d3d3/3d3d/93d3f/d3d3/3t7e/9PT0/+4uLj/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f/uLe3/622
        sf86rXP/IaVf1D58PhQA//8AAP//ABnO/wBjKicAi///AIHM4ACDz+gAc7/IACuBOxA0tnXTTcSK/83a
        1P/e3d7/3d3d/93d3f/d3d3/3d3d/93d3f/e3t7/09PT/7i4uP+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3
        t/+4t7f/rbax/zqtc/8hpV/TPIExECmpwQAjtOMAIrLfABXN/wCS//8AgcrdHoLH302CxN5Qc7zEXjm6
        fuFMw4r/zdrU/97d3v/d3d3/3d3d/93d3f/d3d3/3d3d/97e3v/T09P/uLi4/7e3t/+3t7f/t7e3/7e3
        t/+3t7f/t7e3/7i3t/+ttrL/Oq1y/yCnaOEqpLpeKKnVUCes2E0jsd0dFcr/AF4AAAKE0uiVht35/4bd
        +v2A2/L9Q8SU/0zDif/N2tT/3t3e/93d3f/d3d3/3d3d/93d3f/d3d3/3t7e/9PT0/+4uLj/t7e3/7e3
        t/+3t7f/t7e3/7e3t/+3t7f/uLe3/622sv87rHH/Ha9+/x7C7/0dw/r9HsT4/yG8640A//8AiP//AITK
        3jeH3vhtiOH/a33Y6XU8voXjTMOJ/83a1P/e3d7/3d3d/93d3f/d3d3/3d3d/93d3f/e3t7/09PT/7i4
        uP+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+4t7f/rbay/zuscv8eqW/mIMDldx3I/2sexvtrI7fkMQ7e
        /wCS//8AhNPpAIbg/AB4zdkANHQuEDW1dNJMxIr/zdrU/97d3v/d3d3/3d3d/93d3f/d3d3/3d3d/97e
        3v/T09P/uLi4/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7i3t/+ttrL/O61z/yClX9M9fCgQIrnZABzH
        /AAhu+oAB+3/AJP//wCD0ukAhuD8AHjN2QA1dC4QNbV00kzEiv/N2tT/3t3e/93d3f/d3d3/3d3d/93d
        3f/d3d3/3t7e/9PT0/+4uLj/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f/uLe3/622sv87rXP/IKVf0z18
        KBAiudkAHMf8ACG76gAG7f8Ah///AIPO5jOF3vtrh+H/a3zY6XU8voXjTMOJ/83a1P/e3d7/3d3d/93d
        3f/d3d3/3d3d/93d3f/e3t7/09PT/7i4uP+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+4t7f/rbay/zus
        cv8eqW/mIMDldx3I/2sexvtrI7fkMQ3e/wBsAAAAhNPplIbd+P+G3vv9gdzz/UTFlf9Mw4n/zdrU/97d
        3v/d3d3/3d3d/93d3f/d3d3/3d3d/97e3v/T09P/uLi4/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7i3
        t/+ttrL/O6xx/x2vfv8ewu/9HcP6/R7E+P8hvOuNAP//AInb7gCCxdYhhcreT4bM4092wsleObp/4UzD
        iv/N2tT/3t3e/93d3f/d3d3/3d3d/93d3f/d3d3/3t7e/9PT0/+4uLj/t7e3/7e3t/+3t7f/t7e3/7e3
        t/+3t7f/uLe3/622sv86rXL/IKdo4Sqkul4oqdVQJ6zYTSOx3R0Wyv8AiuT6AILJ3ACF0ecAdMPKACiD
        OxAzt3XTTcOK/83a1P/e3d7/3d3d/93d3f/d3d3/3d3d/93d3f/e3t7/09PT/7i4uP+3t7f/t7e3/7e3
        t/+3t7f/t7e3/7e3t/+4t7f/rbax/zqtc/8hpV/TPIExECmpwQAjtOMAIrLfABXN/wB7bGgAieP/AOX/
        /wBx//8AN4RNFDS3ddRNxIr/zdrU/97d3v/d3d3/3d3d/93d3f/d3d3/3d3d/97e3v/T09P/uLi4/7e3
        t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7i3t/+ttrH/Oq1z/yGlX9Q+fD4UAP//AAD//wAW0v8AZx0VAI7/
        /wCEz+ZNg9LsnoPR6qF6zd2oPb+I70zDif/N2tT/3t3e/93d3f/d3d3/3d3d/93d3f/d3d3/3t7e/9PT
        0/+4uLj/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f/uLe3/622sf86rXL/H6py7yWz16gktuehI7jpniG5
        6UkT3f8AWgAAAYXQ54yG3/zvhuD+7IHd9O5DxJP8RsKG/8bZ0P/g3t//3t3e/97d3v/e3d7/3t3e/97d
        3v/f3t7/1NTU/7m4uf+4t7f/uLe3/7i3t/+4t7f/uLe3/7i3t/+5t7j/prau/zKrbf8er338HcXy7R3H
        /+wdxvzvH73uggD//wCI1u0AhrzOEIjb9SaK4v8lb8jHODm7fdw1v33/f8yn/8bZ0P/N2tT/zNrU/8za
        1P/M2tT/zNrU/83a1P/E0cv/rriz/622sf+ttrH/rbax/622sf+ttrH/rbax/6a2rv9osIz/IKpk/yGn
        ZtsktME3Hcn/JSDB9SYnps4PIrXlAIjV6wCHvM4AiNv1AHnR3AA2gjkIN7l4vjO/fP81v33/RsKF/0zD
        if9MxIr/TMSK/0zDiv9Mw4j/TMOK/0rAh/88r3X/Oq1y/zutcf86rXL/Oq1z/zqtc/86rXL/Mqtt/yCq
        ZP8eqmP/IqVhuEB1IAcju9oAIMH0ACilzQAgt+cAAAAAAAAAAAAAAAAAWHdOACfShwA8rnFFN7l4vTm8
        fttDxJT8Pb6I7zO3dtQzt3XTObt/4UTFlf88v4biMrRy0SKnYtMdqm/mHa9+/x6paeEep2DTHqdh1B6r
        c+8er338Iadm2yGmYbgjomI7H6dgAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABShFYAYGlFADTE
        fgA2hDsIbcrIN4Dd9O17zd2oN4NNFCaBPBB3wslegdzz/X3Y63UxdC4PNoQuEB3A5Hcdwu/9JqrCXiaU
        PBAtkE4UI7ndqB3F8u0ltMI3OncfBySlYgBVQkcAOZBeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABNh1gAUH1SAHjQ2wCI4P8lhuD+7IPR6qFu//8AdcPLAIjM5E+H3vv9h+D/a3jN2gAhu9oAHMf/ax3E
        +/0nrd1QJa/IAAD//wAjve+hHMf/7B7J/yUiu9sA/wAAACeTXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAhtrzAIba8yaG3/vvg9Lrnt///wCG0ecAh8rfT4be+f+G3vprhuD8ABzG
        /QAdxflsHcT5/yWw3k0jt+gAAP//ACS87aEdxvzvIMH1JiDB9QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEvM0AhLzNEITQ54yDz+ZNieX/AILB0wCCvc4jhM/lmYPM
        4jSEz+UAJbrmACe24DUkuumVKLPfHii14AAK3P8AKLbjUCS554wroskQK6LKAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIbU6gCG1ewASAAAAZH//wB1Z2MAjPb/AIzs
        /wBsAAABjv//AKT//wAA//8AAP//AP8AAAEP0/8ADtX/AGlhZAAA//8A/wAAAR+26QAetugAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/AAAP/wAAD/8AAA/8AAAD+AAAAfgAAAHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADgAAAH4AAAB/AAAA/8AAA//AAAP/wAAD8=
</value>
  </data>
</root>